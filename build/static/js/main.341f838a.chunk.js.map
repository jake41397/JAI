{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","improvRNN","mm","sequence","ticksPerQuarter","totalTime","timeSignatures","time","numerator","denominator","tempos","qpm","notes","pitch","midi","startTime","endTime","quantizedSequence","quantizeNoteSequence","synth","Tone","toMaster","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","improvisedMelody","playOriginalMelody","playGeneratedMelody","originalMelodyButton","generatedMelodyButton","wrap","_context","prev","next","initialize","continueSequence","sent","forEach","note","triggerAttackRelease","Note","fromMidi","quantizedEndStep","quantizedStartStep","document","getElementById","onclick","t0","console","error","stop","this","apply","arguments","startProgram","react_default","createElement","className","src","logo","alt","id","href","target","rel","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.341f838a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as mm from '@magenta/music';\nimport { midi, Note } from \"tonal\";\nimport * as Tone from \"tone\";\n\nclass App extends Component {\n  render() {\n\n    const improvRNN = new mm.MusicRNN('https://storage.googleapis.com/magentadata/js/checkpoints/music_rnn/chord_pitches_improv');\n\n    const sequence = {\n      ticksPerQuarter: 220,\n      totalTime: 58,\n      timeSignatures: [\n        {\n          time: 0,\n          numerator: 4,\n          denominator: 4\n        }\n      ],\n      tempos: [\n        {\n          time: 0,\n          qpm: 120\n        }\n      ],\n      notes: [\n        { pitch: midi('Gb4'), startTime: 0, endTime: 1 },\n        { pitch: midi('F4'), startTime: 1, endTime: 3.5 },\n        { pitch: midi('Ab4'), startTime: 3.5, endTime: 4 },\n        { pitch: midi('C5'), startTime: 4, endTime: 4.5 },\n        { pitch: midi('Eb5'), startTime: 4.5, endTime: 5 },\n        { pitch: midi('Gb5'), startTime: 5, endTime: 6 },\n        { pitch: midi('F5'), startTime: 6, endTime: 7 },\n        { pitch: midi('E5'), startTime: 7, endTime: 8 },\n        { pitch: midi('Eb5'), startTime: 8, endTime: 8.5 },\n        { pitch: midi('C5'), startTime: 8.5, endTime: 9 },\n        { pitch: midi('G4'), startTime: 9, endTime: 11.5 },\n        { pitch: midi('F4'), startTime: 11.5, endTime: 12 },\n        { pitch: midi('Ab4'), startTime: 12, endTime: 12.5 },\n        { pitch: midi('C5'), startTime: 12.5, endTime: 13 },\n        { pitch: midi('Eb5'), startTime: 13, endTime: 14 },\n        { pitch: midi('D5'), startTime: 14, endTime: 15 },\n        { pitch: midi('Db5'), startTime: 15, endTime: 16 },\n        { pitch: midi('C5'), startTime: 16, endTime: 16.5 },\n        { pitch: midi('F5'), startTime: 16.5, endTime: 17 },\n        { pitch: midi('F4'), startTime: 17, endTime: 19.5 },\n        { pitch: midi('G4'), startTime: 19.5, endTime: 20 },\n        { pitch: midi('Ab4'), startTime: 20, endTime: 20.5 },\n        { pitch: midi('C5'), startTime: 20.5, endTime: 21 },\n        { pitch: midi('Eb5'), startTime: 21, endTime: 21.5 },\n        { pitch: midi('C5'), startTime: 21.5, endTime: 22 },\n        { pitch: midi('Eb5'), startTime: 22, endTime: 22.5 },\n        { pitch: midi('C5'), startTime: 22.5, endTime: 24.5 },\n        { pitch: midi('Eb5'), startTime: 24.5, endTime: 25.5 },\n        { pitch: midi('G4'), startTime: 25.5, endTime: 28.5 }\n      ]\n    }\n\n    const quantizedSequence = mm.sequences.quantizeNoteSequence(sequence, 1);\n    const synth = new Tone.Synth().toMaster();\n\n    const startProgram = async () => {\n      try {\n        await improvRNN.initialize()\n        let improvisedMelody = await improvRNN.continueSequence(quantizedSequence, 60, 1.1, ['Bm', 'Bbm', 'Gb7', 'F7', 'Ab', 'Ab7', 'G7', 'Gb7', 'F7', 'Bb7', 'Eb7', 'AM7'])\n    \n        const playOriginalMelody = () => {\n          sequence.notes.forEach(note => {\n            synth.triggerAttackRelease(Note.fromMidi(note.pitch), note.endTime - note.startTime, note.startTime)\n          })\n        }\n    \n        const playGeneratedMelody = () => {\n          improvisedMelody.notes.forEach(note => {\n            synth.triggerAttackRelease(Note.fromMidi(note.pitch), note.quantizedEndStep - note.quantizedStartStep, note.quantizedStartStep)\n          })\n        }\n\n        const originalMelodyButton = document.getElementById('original')\n        const generatedMelodyButton = document.getElementById('generated')\n        \n        originalMelodyButton.onclick = () => {\n          playOriginalMelody()\n        }\n\n        generatedMelodyButton.onclick = () => \n        {\n          playGeneratedMelody()\n        }\n\n      } catch (error) {\n        console.error(error)\n      }\n    }\n\n    startProgram();\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <div className=\"d-flex justify-content-around\">\n              <button className='btn btn-defualt center-block' id=\"original\">\n                Original Melody\n              </button>\n              <button className='btn btn-default center-block' id=\"generated\">\n                Generated Melody\n              </button>\n            </div>\n          <p>\n            Hello, World. This is Patrick!\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}